# Macro pour suivre la consommation de filament
[gcode_macro FILAMENT_USAGE]
variable_set E_POSITION=[get_position 2]
variable_set FILAMENT_USED=0
if printer.has_serial():
    # Récupération des informations de la bobine
    variable_set FILAMENT_WEIGHT=1.0   # poids de la bobine (kg)
    variable_set FILAMENT_DENSITY=1.0  # densité du filament (g/cm^3)
    variable_set FILAMENT_TYPE="PLA"   # type de filament

    # Récupération du type de filament depuis le G-code
    gcode = read_until_regex(".*\n")
    if "PLA" in gcode:
        FILAMENT_TYPE = "PLA"
        FILAMENT_DENSITY = 1.24  # densité du PLA (g/cm^3)
    elif "ABS" in gcode:
        FILAMENT_TYPE = "ABS"
        FILAMENT_DENSITY = 1.04  # densité de l'ABS (g/cm^3)
    elif "PETG" in gcode:
        FILAMENT_TYPE = "PETG"
        FILAMENT_DENSITY = 1.27  # densité du PETG (g/cm^3)

    # Récupération de la température d'impression depuis le G-code
    regex_temp = ".*\s(?:S|T)(\d+)"
    temp_match = match_first(regex_temp, gcode)
    if temp_match is not None:
        IMPR_TEMP = int(temp_match.group(1))

while True:
    # Attente d'une commande d'extrusion
    gcode = read_until_regex("^(G1|G2|G3).*E")
    match = match_first(".*E(-?\d+\.?\d*).*", gcode)
    if match is not None:
        new_e_pos = float(match.group(1))
        filament_used = (new_e_pos - E_POSITION) / 1000.0 * (filament_diameter/2)**2 * math.pi * filament_density
        FILAMENT_USED += filament_used
        E_POSITION = new_e_pos
        if printer.has_serial():
            # Envoi des informations de consommation de filament à OctoPrint
            notification = "M117 Consumed {}g of {}".format(round(FILAMENT_USED, 2), FILAMENT_TYPE)
            printer.write_serial_line(notification)

            # Enregistrement des informations de consommation de filament dans un fichier log
            log_line = "{} - {}g of {} used at {}C".format(get_time_string(), round(filament_used, 2), FILAMENT_TYPE, IMPR_TEMP)
            with open("filament_usage.log", "a") as f:
                f.write(log_line + "\n")


# Macro pour réinitialiser la consommation de filament
[gcode_macro FILAMENT_RESET]
variable_set E_POSITION=[get_position 2]
variable_set FILAMENT_USED=0


# Macro pour afficher la consommation de filament totale
[gcode_macro FILAMENT_DISPLAY]
variable_set FILAMENT_USED=0
for pos in [0,1,2]:
    gcode = "G1 X0 Y0 Z{} F3000\nG92 E0\nG1 E0 F1200\n".format(pos)
    printer.gcode_script(gcode)
    read_until("ok\n")
    read_until("ok\n")
    gcode = "G1 X200
