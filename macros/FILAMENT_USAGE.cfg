[gcode_macro FILAMENT_USAGE]
variable_current filament_used
variable filament_density = 1.0  # g/cm^3
variable filament_diameter = 1.75  # mm

# Fonction pour recalculer la consommation de filament Ã  partir d'un fichier G-code existant
function calculate_filament_usage(filename: str, density: float, diameter: float) -> float:
    filament_used = 0.0
    with open(filename, "r") as f:
        for line in f:
            if line.startswith("G1"):
                fields = line.split()
                for field in fields:
                    if field.startswith("E"):
                        try:
                            length = float(field[1:])
                            filament_used += (length/10.0) * (diameter/2.0)**2 * 3.14159 * density
                        except ValueError:
                            continue
    return filament_used

# Macro principale pour suivre la consommation de filament
[gcode_macro FILAMENT_USAGE]
variable_current filament_used
variable filament_density = 1.0  # g/cm^3
variable filament_diameter = 1.75  # mm

{% if printer.has_serial() %}
    {% if enable %}
        {% set filename = 'filament_usage.gcode' %}
        {% set density = PLA_density if filament_type == 'PLA' else (ABS_density if filament_type == 'ABS' else (PETG_density if filament_type == 'PETG' else filament_density)) %}
        {% set used = calculate_filament_usage(filename, density, filament_diameter) %}
        {% set remaining = filament_weight - used %}
        {% set used_percent = (used / filament_weight) * 100 %}
        {% set remaining_percent = 100 - used_percent %}
        {% set message = "Filament usage: {:.2f}g ({:.2f}%)\nFilament remaining: {:.2f}g ({:.2f}%)" %}
        {% set message = message.format(used, used_percent, remaining, remaining_percent) %}
        {% set filament_used = used %}
        M117 {{ message }}
    {% endif %}
{% endif %}
